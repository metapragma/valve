#!/usr/bin/env bash
#
# vim: set ft=sh:
#
# @description entrypoint for ci/cd
# @import hyperfine/downloadHyperfine
# @import lang/required
# @import console/die
# @import console/info
# @import array/join
# @import lang/executeIn

main ()
{
    verbose true
    strict true

    local suite="${1}"
    local minRuns="${3:-15}"
    local iterations="${2:-100000}"
    local hyperfine="${MANAGE_REPOSITORY}/vendor/hyperfine/hyperfine"
    local directory
    local dirty=0

    _ required "${suite}" || _ die "specify a suite to start"

    declare -A suites

    {
        git diff --exit-code &&
        git diff --cached --exit-code
    } > /dev/null || {
      dirty=1
    }

    while read -d '' -r file
    do
      local suite
      local benchmark
      suite="$(basename "${file}")"
      suite="${suite%.ts}"
      suite="${suite%.js}"
      benchmark="$(basename "$(dirname "${file}")")"

      suites["${suite}"]+="${benchmark},"
    done < <(find "${MANAGE_REPOSITORY}/examples" \
      \( -name "${suite}.ts" -or -name "${suite}.js" \) \
      -maxdepth 2 \
      -type f \
      -print0 \
      2> /dev/null)

    if [[ "${#suites[*]}" != 0 ]]
    then
      local sha

      _ downloadHyperfine
      directory="$(mktemp -d -t markmanage-XXXXXXXX)"
      CLEANUP_DIRECTORIES+=("${directory}")

      sha="$(git rev-parse --short HEAD)"

      _ info "Compiling the project"
      "${MANAGE_REPOSITORY}/node_modules/.bin/tsc" -p \
        "${MANAGE_REPOSITORY}/examples" --outDir "${directory}"

      ln -s "${MANAGE_REPOSITORY}/node_modules" "${directory}/node_modules"
      ln -s "${MANAGE_REPOSITORY}/package.json" "${directory}/package.json"

      for suite in "${!suites[@]}"
      do
        local benchmarks
        local arguments=()
        local report="benchmark-${sha}.json"

        if (( dirty != 0 ))
        then
          report="d-${report}"
        fi

        report="${MANAGE_REPOSITORY}/perf/data/${suite}/${report}"

        mkdir -p "$(dirname "${report}")"

        IFS=$',' read -r -a benchmarks <<< "${suites[$suite]%,}"

        for bench in "${benchmarks[@]}"
        do
          arguments+=("'node ${bench}/${suite}.js ${iterations}'")
        done
      done

      # # --style basic \
      _ info "Running '${suite}' benchmark"

      _ executeIn "${directory}/examples" "${hyperfine} \
      --warmup 3 \
      --min-runs "${minRuns}" \
      --export-json ${report} \
      $(_ join arguments " ")"
    fi
}

onExit ()
{
    for directory in "${CLEANUP_DIRECTORIES[@]}"
    do
        [ -d "${directory}" ] && rm -rf "${directory}"
    done
}
